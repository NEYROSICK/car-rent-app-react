{"version":3,"file":"static/js/578.9c547670.chunk.js","mappings":"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","sources":["components/common/button/button.styled.js","components/common/button/Button.js","components/common/modal/modal.styled.js","components/common/card/card.styled.js","components/common/modal/Modal.js","components/common/card/Card.js","redux/selectors.js","components/catalog/advertList/advertList.styled.js","components/catalog/advertList/AdvertList.js","components/common/icons/IconChevron.js","components/common/filters/filters.styled.js","redux/constants.js","components/common/filters/Filters.js","views/catalog/CatalogPage.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonStyled = styled.button`\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  line-height: 20px;\r\n  color: var(--clr-primary-inv);\r\n\r\n  border: none;\r\n  border-radius: 12px;\r\n  background-color: var(--clr-brand);\r\n\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: var(--clr-hover);\r\n  }\r\n\r\n  ${({ variant }) =>\r\n    variant === \"search\" &&\r\n    `\r\n    max-width: 136px;\r\n    height: 48px;\r\n  `}\r\n\r\n  ${({ variant }) =>\r\n    variant === \"rental\" &&\r\n    `\r\n    max-width: 168px;\r\n  `}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ButtonStyled } from \"./button.styled\";\r\n\r\nconst Button = ({ children, variant, href, onClick }) => {\r\n  const Component = href ? \"a\" : \"button\";\r\n\r\n  return (\r\n    <ButtonStyled variant={variant} as={Component} href={href} onClick={onClick}>\r\n      {children}\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nButton.propTypes = { variant: PropTypes.string.isRequired };\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background-color: var(--clr-bcg-backdrop);\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: relative;\r\n  width: 541px;\r\n  height: 752px;\r\n\r\n  padding: 40px;\r\n\r\n  background-color: var(--clr-bcg);\r\n  border-radius: 24px;\r\n`;\r\n\r\nexport const BtnClose = styled.button`\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 16px;\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  font-weight: bold;\r\n\r\n  background: none;\r\n  border: none;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  display: block;\r\n  object-fit: cover;\r\n  border-radius: 14px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const ModalTitle = styled.h3`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  color: var(--clr-primary);\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const AdditionalInfo = styled.ul`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  column-gap: 12px;\r\n  row-gap: 4px;\r\n  margin-bottom: 28px;\r\n  color: var(--clr-secondary);\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const ModalSecondaryTitle = styled.h4`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ accessories }) => accessories && `margin-bottom: 24px;`}\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst deepEqual = (obj1, obj2) => {\r\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n};\r\n\r\nexport const CardContainer = styled.li`\r\n  position: relative;\r\n  width: 274px;\r\n`;\r\n\r\nexport const FavoriteBtn = styled.button`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 14px;\r\n  width: var(--svg-size-heart);\r\n  height: var(--svg-size-heart);\r\n\r\n  background: none;\r\n  border: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  cursor: pointer;\r\n\r\n  & > svg {\r\n    width: 100%;\r\n    height: 100%;\r\n    stroke: var(--clr-brand);\r\n\r\n    fill: ${({ favorites, item }) => {\r\n      if (favorites === null) {\r\n        return \"transparent\";\r\n      }\r\n      return favorites.some((favorite) => deepEqual(favorite, item))\r\n        ? \"var(--clr-brand)\"\r\n        : \"transparent\";\r\n    }};\r\n\r\n    transition: scale 0.3s, fill 0.3s;\r\n  }\r\n\r\n  &:hover > svg {\r\n    scale: 1.2;\r\n  }\r\n\r\n  &:active > svg {\r\n    scale: 0.9;\r\n  }\r\n`;\r\n\r\nexport const ImgContainer = styled.div`\r\n  overflow: hidden;\r\n  border-radius: 14px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const CarImg = styled.img`\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  color: var(--clr-primary);\r\n\r\n  & > h3 {\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Model = styled.span`\r\n  color: var(--clr-brand);\r\n`;\r\n\r\nexport const AdditionalInfo = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  column-gap: 12px;\r\n  row-gap: 4px;\r\n  margin-bottom: 28px;\r\n  color: var(--clr-secondary);\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AdditionalInfo,\r\n  Backdrop,\r\n  BtnClose,\r\n  Description,\r\n  Img,\r\n  ModalContainer,\r\n  ModalSecondaryTitle,\r\n  ModalTitle,\r\n} from \"./modal.styled\";\r\nimport { Model } from \"../card/card.styled\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Button from \"../button/Button\";\r\n\r\nconst Modal = ({ item, isModalOpen, setIsModalOpen }) => {\r\n  const {\r\n    img,\r\n    make: brand,\r\n    model,\r\n    year,\r\n    fuelConsumption,\r\n    address,\r\n    engineSize,\r\n    type,\r\n    id,\r\n    description,\r\n    accessories,\r\n    functionalities,\r\n    rentalConditions,\r\n  } = item;\r\n\r\n  const handleCloseClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      setIsModalOpen(!isModalOpen);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeydown = (e) => {\r\n      if (e.code === \"Escape\") {\r\n        setIsModalOpen(!isModalOpen);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeydown);\r\n    document.body.style.overflowY = \"hidden\";\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeydown);\r\n      document.body.style.overflowY = \"auto\";\r\n    };\r\n  }, [isModalOpen, setIsModalOpen]);\r\n\r\n  return (\r\n    <Backdrop onClick={handleCloseClick}>\r\n      <ModalContainer>\r\n        <BtnClose onClick={handleCloseClick}>X</BtnClose>\r\n        <Img src={img} alt={brand} width={461} height={248} />\r\n        <ModalTitle>\r\n          {brand}\r\n          <Model> {model}</Model>, {year}\r\n        </ModalTitle>\r\n        <AdditionalInfo>\r\n          <li>{address.split(\", \")[1]}</li>\r\n          <li>{address.split(\", \")[2]}</li>\r\n          <li>Id: {id}</li>\r\n          <li>Year: {year}</li>\r\n          <li>Type: {type}</li>\r\n          <li>Fuel Consumption: {fuelConsumption}</li>\r\n          <li>Engine Size: {engineSize}</li>\r\n        </AdditionalInfo>\r\n        <Description>{description}</Description>\r\n\r\n        <ModalSecondaryTitle>Accessories and functionalities:</ModalSecondaryTitle>\r\n\r\n        <AdditionalInfo accessories>\r\n          {accessories.map((element) => (\r\n            <li key={nanoid}>{element}</li>\r\n          ))}\r\n          {functionalities.map((element) => (\r\n            <li key={nanoid}>{element}</li>\r\n          ))}\r\n        </AdditionalInfo>\r\n\r\n        <ModalSecondaryTitle>Rental Conditions: </ModalSecondaryTitle>\r\n\r\n        <ul>\r\n          {rentalConditions.split(\"\\n\").map((element) => (\r\n            <li key={nanoid}>{element}</li>\r\n          ))}\r\n          <li>Mileage: </li>\r\n          <li>Price</li>\r\n        </ul>\r\n\r\n        <Button variant=\"rental\" href=\"tel:+380730000000\">\r\n          Rental car\r\n        </Button>\r\n      </ModalContainer>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nModal.propTypes = { item: PropTypes.object.isRequired };\r\n\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../common/modal/Modal\";\r\nimport { createPortal } from \"react-dom\";\r\nimport {\r\n  AdditionalInfo,\r\n  CarImg,\r\n  CardContainer,\r\n  CardTitle,\r\n  FavoriteBtn,\r\n  ImgContainer,\r\n  Model,\r\n  TitleContainer,\r\n} from \"./card.styled\";\r\nimport IconHeart from \"../../common/icons/IconHeart\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleFavorite } from \"../../../redux/favoriteSlice\";\r\nimport { getFavorites } from \"../../../redux/selectors\";\r\nimport Button from \"../../common/button/Button\";\r\n\r\nconst Card = ({ item }) => {\r\n  const {\r\n    img,\r\n    make: brand,\r\n    model,\r\n    year,\r\n    rentalPrice,\r\n    address,\r\n    rentalCompany,\r\n    type,\r\n    id,\r\n    accessories,\r\n  } = item;\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const modalRoot = document.getElementById(\"modal\");\r\n  const dispatch = useDispatch();\r\n  const favorites = useSelector(getFavorites);\r\n\r\n  const handleFavoriteToggle = (item) => {\r\n    dispatch(toggleFavorite(item));\r\n  };\r\n\r\n  const handleModalOpen = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  return (\r\n    <CardContainer>\r\n      <FavoriteBtn\r\n        favorites={favorites}\r\n        item={item}\r\n        onClick={() => {\r\n          handleFavoriteToggle(item);\r\n        }}\r\n      >\r\n        <IconHeart />\r\n      </FavoriteBtn>\r\n\r\n      <ImgContainer>\r\n        <CarImg src={img} alt={brand} width={274} height={274} />\r\n      </ImgContainer>\r\n      <TitleContainer>\r\n        <CardTitle>\r\n          {brand}\r\n          <Model> {model}</Model>, {year}\r\n        </CardTitle>\r\n        <span>{rentalPrice}</span>\r\n      </TitleContainer>\r\n\r\n      <AdditionalInfo>\r\n        <li>{address.split(\", \")[1]}</li>\r\n        <li>{address.split(\", \")[2]}</li>\r\n        <li>{rentalCompany}</li>\r\n        <li>{type}</li>\r\n        <li>{brand}</li>\r\n        <li>{id}</li>\r\n        <li>{accessories[2].split(\" \")[0]}</li>\r\n      </AdditionalInfo>\r\n\r\n      <Button onClick={handleModalOpen}>Learn more</Button>\r\n\r\n      {isModalOpen &&\r\n        createPortal(\r\n          <Modal item={item} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />,\r\n          modalRoot\r\n        )}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nCard.propTypes = { item: PropTypes.object.isRequired };\r\n\r\nexport default Card;\r\n","export const getAdverts = (state) => state.adverts.items;\r\nexport const getIsLoading = (state) => state.adverts.isLoading;\r\nexport const getAdCount = (state) => state.adverts.count;\r\nexport const getBrand = (state) => state.filters.brand;\r\nexport const getFavorites = (state) => state.favorites.items;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const AdvertListSection = styled.section`\r\n  padding-bottom: 50px;\r\n`;\r\n\r\nexport const CardList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 29px;\r\n  align-items: stretch;\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getAdverts, getBrand } from \"../../../redux/selectors\";\r\nimport Container from \"../../common/container/Container\";\r\nimport Card from \"../../common/card/Card\";\r\nimport { AdvertListSection, CardList } from \"./advertList.styled\";\r\n\r\nconst AdvertList = () => {\r\n  let adverts = useSelector(getAdverts);\r\n  const brand = useSelector(getBrand);\r\n\r\n  const filterAdverts = () => {\r\n    if (brand) {\r\n      return adverts.filter(({ make }) => make === brand);\r\n    }\r\n    return adverts;\r\n  };\r\n\r\n  adverts = filterAdverts();\r\n\r\n  return (\r\n    <AdvertListSection>\r\n      <Container>\r\n        <h2 className=\"visually-hidden\">Car advertisement list</h2>\r\n        <CardList>\r\n          {adverts.map((advert) => (\r\n            <Card item={advert} key={advert.id} />\r\n          ))}\r\n        </CardList>\r\n      </Container>\r\n    </AdvertListSection>\r\n  );\r\n};\r\n\r\nexport default AdvertList;\r\n","const IconChevron = () => {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"32\"\r\n      height=\"32\"\r\n      viewBox=\"0 0 32 32\"\r\n    >\r\n      <title>chevron-down</title>\r\n      <path\r\n        fill=\"none\"\r\n        strokeLinejoin=\"round\"\r\n        strokeLinecap=\"round\"\r\n        strokeMiterlimit=\"4\"\r\n        strokeWidth=\"3.2\"\r\n        stroke=\"#000\"\r\n        d=\"M8 12l8 8 8-8\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IconChevron;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FiltersContainer = styled.div`\r\n  padding: 50px 0;\r\n`;\r\n\r\nexport const FiltersList = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n\r\n  gap: 18px;\r\n`;\r\n\r\nexport const BrandContainer = styled.div`\r\n  position: relative;\r\n\r\n  & > p {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    color: var(--clr-secondary-lt);\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const SelectBtn = styled.button`\r\n  width: 224px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 14px 18px;\r\n\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n\r\n  border: none;\r\n  border-radius: 14px;\r\n  background: #f7f7fb;\r\n  cursor: pointer;\r\n\r\n  & > span {\r\n    flex-grow: 1;\r\n    text-align: left;\r\n  }\r\n\r\n  & > svg {\r\n    width: var(--svg-size-chevron);\r\n    height: var(--svg-size-chevron);\r\n    transform: rotate(${({ isBrandOpen }) => (isBrandOpen ? \"180deg\" : \"0deg\")});\r\n    transition: transform 0.3s cubic-bezier(0.65, 1.79, 0.78, 1.02);\r\n  }\r\n`;\r\n\r\nexport const BrandList = styled.div`\r\n  position: absolute;\r\n  top: 78px;\r\n  left: 0;\r\n  height: 272px;\r\n  width: 224px;\r\n  z-index: 2;\r\n\r\n  padding: 14px 8px;\r\n\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  color: var(--clr-filter-inactive);\r\n\r\n  border: 1px solid rgba(18, 20, 23, 0.05);\r\n  border-radius: 14px;\r\n  background-color: var(--clr-bcg);\r\n  box-shadow: 0px 4px 36px 0px rgba(0, 0, 0, 0.02);\r\n\r\n  & > div {\r\n    width: 100%;\r\n    height: 99%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    transition: background-color 0.3s;\r\n\r\n    &:hover {\r\n      background-color: var(--clr-bcg-scrollbar);\r\n    }\r\n\r\n    &::-webkit-scrollbar {\r\n      width: var(--scrollbar-filter-width);\r\n    }\r\n\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n      background: var(--clr-bcg);\r\n    }\r\n\r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: inherit;\r\n      border-radius: var(--scrollbar-border-radius);\r\n    }\r\n\r\n    & > ul {\r\n      display: flex;\r\n      flex-direction: column;\r\n      background-color: var(--clr-bcg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BrandItem = styled.li`\r\n  width: 192px;\r\n  padding: 4px 10px;\r\n  color: ${({ brand, clickedOption }) =>\r\n    brand !== clickedOption ? \"inherit\" : \"var(--clr-primary)\"};\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s, color 0.3s;\r\n\r\n  &:hover {\r\n    color: var(--clr-primary);\r\n    background-color: var(--clr-bcg-scrollbar);\r\n  }\r\n`;\r\n","export const defaultLimit = 12;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport IconChevron from \"../icons/IconChevron\";\r\nimport {\r\n  BrandContainer,\r\n  BrandItem,\r\n  BrandList,\r\n  FiltersContainer,\r\n  FiltersList,\r\n  SelectBtn,\r\n} from \"./filters.styled\";\r\nimport brands from \"../../../assets/carBrands.json\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAdCount } from \"../../../redux/selectors\";\r\nimport { changeFilter } from \"../../../redux/filterSlice\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Button from \"../button/Button\";\r\nimport { fetchAdverts } from \"../../../redux/operations\";\r\nimport { defaultLimit } from \"../../../redux/constants\";\r\nimport Container from \"../container/Container\";\r\n\r\nconst Filters = () => {\r\n  const [isBrandOpen, setIsBrandOpen] = useState(false);\r\n  const [clickedOption, setClickedOption] = useState(\"Select brand\");\r\n  const dropdownRef = useRef(null);\r\n  const scrollToRef = useRef(null);\r\n  const brandButton = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const count = useSelector(getAdCount);\r\n\r\n  const handleBrandClick = (e) => {\r\n    if (e.target.innerText !== clickedOption) {\r\n      setClickedOption(e.target.innerText);\r\n    }\r\n\r\n    setIsBrandOpen(!isBrandOpen);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    if (count === defaultLimit) {\r\n      dispatch(fetchAdverts({}));\r\n    }\r\n\r\n    dispatch(changeFilter(clickedOption));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isBrandOpen && scrollToRef.current) {\r\n      dropdownRef.current.scrollTop = scrollToRef.current.offsetTop - 14;\r\n    }\r\n  }, [isBrandOpen]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (\r\n        dropdownRef.current &&\r\n        !dropdownRef.current.contains(e.target) &&\r\n        !brandButton.current.contains(e.target)\r\n      ) {\r\n        setIsBrandOpen(!isBrandOpen);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, [isBrandOpen]);\r\n\r\n  return (\r\n    <FiltersContainer>\r\n      <Container>\r\n        <FiltersList>\r\n          <BrandContainer>\r\n            <p>Car brand</p>\r\n\r\n            <SelectBtn\r\n              onClick={() => {\r\n                setIsBrandOpen(!isBrandOpen);\r\n              }}\r\n              isBrandOpen={isBrandOpen}\r\n              ref={brandButton}\r\n            >\r\n              <span>{clickedOption}</span>\r\n              <IconChevron />\r\n            </SelectBtn>\r\n\r\n            {isBrandOpen && (\r\n              <BrandList>\r\n                <div ref={dropdownRef}>\r\n                  <ul>\r\n                    {brands.map((brand) => (\r\n                      <BrandItem\r\n                        onClick={handleBrandClick}\r\n                        clickedOption={clickedOption}\r\n                        brand={brand}\r\n                        key={nanoid()}\r\n                        ref={clickedOption === brand ? scrollToRef : null}\r\n                      >\r\n                        {brand}\r\n                      </BrandItem>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </BrandList>\r\n            )}\r\n          </BrandContainer>\r\n          <Button variant=\"search\" onClick={handleSearchClick}>\r\n            Search\r\n          </Button>\r\n        </FiltersList>\r\n      </Container>\r\n    </FiltersContainer>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAdverts } from \"../../redux/operations\";\r\nimport AdvertList from \"../../components/catalog/advertList/AdvertList\";\r\nimport { getIsLoading } from \"../../redux/selectors\";\r\nimport Filters from \"../../components/common/filters/Filters\";\r\nimport { defaultLimit } from \"../../redux/constants\";\r\nconst CatalogPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAdverts({ page: 1, limit: defaultLimit }));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <main>\r\n      <Filters />\r\n      {isLoading ? <></> : <AdvertList />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CatalogPage;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ButtonStyled","styled","button","_templateObject","_taggedTemplateLiteral","_ref","variant","_ref2","children","href","onClick","Component","_jsx","as","Backdrop","div","ModalContainer","_templateObject2","BtnClose","_templateObject3","Img","img","_templateObject4","ModalTitle","h3","_templateObject5","AdditionalInfo","ul","_templateObject6","Description","p","_templateObject7","ModalSecondaryTitle","h4","_templateObject8","accessories","CardContainer","li","FavoriteBtn","favorites","item","some","favorite","deepEqual","obj1","obj2","JSON","stringify","ImgContainer","CarImg","TitleContainer","CardTitle","Model","span","isModalOpen","setIsModalOpen","make","brand","model","year","fuelConsumption","address","engineSize","type","id","description","functionalities","rentalConditions","handleCloseClick","e","currentTarget","target","useEffect","handleKeydown","code","window","addEventListener","document","body","style","overflowY","removeEventListener","_jsxs","src","alt","width","height","split","map","element","nanoid","Button","rentalPrice","rentalCompany","useState","modalRoot","getElementById","dispatch","useDispatch","useSelector","getFavorites","toggleFavorite","handleFavoriteToggle","IconHeart","handleModalOpen","createPortal","Modal","getAdverts","state","adverts","items","getIsLoading","isLoading","getAdCount","count","getBrand","filters","AdvertListSection","section","CardList","AdvertList","filter","Container","className","advert","Card","IconChevron","version","xmlns","viewBox","fill","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","stroke","d","FiltersContainer","FiltersList","BrandContainer","SelectBtn","isBrandOpen","BrandList","BrandItem","clickedOption","Filters","setIsBrandOpen","setClickedOption","dropdownRef","useRef","scrollToRef","brandButton","handleBrandClick","innerText","current","scrollTop","offsetTop","handleClickOutside","contains","ref","brands","handleSearchClick","fetchAdverts","changeFilter","props","page","limit","_Fragment","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}